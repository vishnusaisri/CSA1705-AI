from collections import deque
def water_jug_bfs(capacity_x, capacity_y, target):
    visited = set()
    queue = deque([(0, 0)])
    
    while queue:
        x, y = queue.popleft()
        
        if (x, y) in visited:
            continue
        visited.add((x, y))
        
        print(f"Jug X: {x}L, Jug Y: {y}L")
        
        if x == target or y == target:
            print("Target reached!")
            return
        
        transitions = [
            (capacity_x, y),
            (x, capacity_y),
            (0, y),
            (x, 0),
            (max(0, x - (capacity_y - y)), min(capacity_y, y + x)),
            (min(capacity_x, x + y), max(0, y - (capacity_x - x)))
        ]
        
        for new_state in transitions:
            if new_state not in visited:
                queue.append(new_state)
capacity_x = 4
capacity_y = 3
target = 2
water_jug_bfs(capacity_x, capacity_y, target)
